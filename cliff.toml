[changelog]
trim = true

header = """
# Changelog

All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.1.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).
"""

body = """
{#- Helper: generate GitHub repo URL #}
{%- macro remote_url() -%}
    https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}
{%- endmacro %}

{#- Helper: print single commit #}
{%- macro print_commit(commit) -%}
    - {% if commit.scope %}`{{ commit.scope }}`: {% endif %}
      {%- if commit.breaking %}[**breaking**] {% endif %}
      {{- commit.message | upper_first }} ([{{ commit.id | truncate(length=7, end="") }}])
{%- endmacro %}

{#- Store the list of commits that will be rendered in a variable #}
{%- set rendered_commits = commits
| filter(attribute="merge_commit", value=false)
| unique(attribute="message") %}

{#- Print out the version #}
{%- if version %}
    ## [{{ version | split(pat="-") | last | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}
    ## [Unreleased]
{% endif %}

{#- Loop through commits by group and print them #}
{%- for group, commits in rendered_commits | group_by(attribute="group") %}
    ### {{ group | striptags | trim | upper_first }}
    {% for commit in commits
    | filter(attribute="scope")
    | sort(attribute="scope") %}
        {{ self::print_commit(commit=commit) }}
    {%- endfor %}

    {%- raw %}\n{% endraw %}

    {%- for commit in commits %}
        {%- if not commit.scope %}
            {{ self::print_commit(commit=commit) }}
        {%- endif %}
    {%- endfor %}
{%- endfor %}

{#- Add a blank line for spacing before the link definitions #}
{%- raw %}\n{% endraw %}

{#- Loop through the rendered commits again to create the link reference table at the bottom #}
{%- for commit in rendered_commits %}
    [{{ commit.id | truncate(length=7, end="") }}]: {{ self::remote_url() }}/commit/{{ commit.id }}
{%- endfor %}

{%- raw %}\n{% endraw -%}
"""

[git]
protect_breaking_commits = true

commit_parsers = [
    { message = "^feat", group = "<!-- 0 -->Features ⛰️" },
    { message = "^fix", group = "<!-- 1 -->Bug Fixes 🐛" },

    { message = "^refactor\\(clippy\\)", skip = true },
    { message = "^refactor", group = "<!-- 2 -->Refactor 🚜" },
    { message = "^doc", group = "<!-- 3 -->Documentation 📚" },
    { message = "^perf", group = "<!-- 4 -->Performance ⚡" },
    { message = "^style", group = "<!-- 5 -->Styling 🎨" },
    { message = "^test", group = "<!-- 6 -->Testing 🧪" },

    { message = "^chore\\(release\\)", skip = true },
    { message = "^chore\\(deps.*\\)", skip = true },
    { message = "^chore\\(pr\\)", skip = true },

    { message = "^chore|^ci", group = "<!-- 7 -->Miscellaneous Tasks ⚙️" },
    { message = "^security", group = "<!-- 8 -->Security 🛡️" },
    { message = "^revert", group = "<!-- 9 -->Revert ◀️" },

    { message = ".*", group = "<!-- 10 -->Other 💼" },
]

[remote.github]
owner = "no-simpler"
repo = "totally-legit"
